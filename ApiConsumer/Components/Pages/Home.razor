@page "/"
@using ApiConsumer.Components.Shared
@using Products.Shared.Models
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@inject IWebAPI WebAPI
//Ter adicionado um botão em cima da tabela principal new product que direcione a uma nova página para que o cliente possa adicionar produtos

<PageTitle>Home</PageTitle>
<MudButton Color="Color.Primary" OnClick="@(() => New(context.Id))">Edit</MudButton> //alterar
<MudTable Items="_productsModels" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh>Title</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>CostPrice</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Title">@context.Title</MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudButton Color="Color.Primary" OnClick="@(() => UpdateProducts(context.Id))">Edit</MudButton>
    </RowTemplate>
</MudTable>


@code {
    private List<AutomotiveProducts.Entities.Products> _productsModels = new();

    private void navigate(long id)
    {
        NavigationManager.NavigateTo($"productN/{id}", true);
    }

    protected override async Task OnParametersSetAsync()
    {
        var response = await WebAPI.GetProducts();

        _productsModels = response;
    }

    void UpdateProducts(long id) { Console.WriteLine($"Update Product: {id}"); }
}
 