@page "/addproducts/"
@inject IWebAPI WebAPI
@rendermode InteractiveServer
@using AutomotiveProducts.Entities;
@inject HttpClient Http


<h3>Add Products</h3>

<EditForm FormName="ProductEditForm" Model="_product" OnValidSubmit="SaveProduct">
    <div class="row">
        <label>Title</label>
        <InputText @bind-Value="_product.Title" />

        <label>Description</label>
        <InputText @bind-Value="_product.Description" />

        <label>CostPrice</label>
        <InputNumber @bind-Value="_product.CostPrice" />

        <button type="submit" class="btn btn-primary">Save</button>
    </div>
</EditForm>

<h3>AddTask</h3>

@* @code {
    [Parameter]
    public int Id { get; set; }
    private ProductModel productModel { get; set; } = new();

    private async void SaveProduct()
    {
        var newProduct = new ProductModel();

        newProduct.Title = productModel.Title;
        newProduct.Description = productModel.Description;
        newProduct.IsCompleted = false;
       
        newProduct.Id = 0;
        
        try
        {
            // await WebApi.AddTodos(newTodo);
            var stringJson = new StringContent(
                System.Text.Json.JsonSerializer.Serialize(newProduct),
                System.Text.Encoding.UTF8,
                "application/json"
            );

            var response = await Http.PostAsync("https://localhost:7224/addproducts", stringJson);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}

 *@

@code {
    [Parameter]
    // Se o Id não for nulo significa que nós estamos a procurar um Id que já existe
    public int? Id { get; set; }

    private AutomotiveProducts.Entities.Products _product = new();

    private async void SaveProduct()
    {
        var product = await WebAPI.Updateproduct(_product);

        _product = new();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var product = await WebAPI.GetProduct(Id.Value);
        }
    }
}
